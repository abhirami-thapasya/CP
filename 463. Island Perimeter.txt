class Solution {
public:
    int islandPerimeter(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        queue<pair<int,int>> q;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1){
                    q.push({i,j});
                }
            }
        }
        int x[]={-1,0,0,1};
        int y[]={0,1,-1,0};
        int count=0;
        while(!q.empty()){
            int row=q.front().first;
            int col=q.front().second;
            q.pop();
            for(int i=0;i<4;i++){
                int r=row+x[i];
                int c=col+y[i];
                if(r<0 || r==m || c<0 || c==n || grid[r][c]==0){
                    count++;
                }
            }
        }
        return count;
    }
};